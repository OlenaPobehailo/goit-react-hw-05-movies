{"version":3,"file":"static/js/134.21f03e51.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","hooks/useHttpRequest.js","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\n\nexport const useHttpRequest = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fn(param)\n      .then(data => {\n        setData(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, [fn, param]);\n\n  return [data, setData, { error, isLoading }];\n};\n","import MovieList from 'components/MovieList';\nimport { useHttpRequest } from 'hooks/useHttpRequest';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/api';\n\nconst Movies = () => {\n  const [searchStr, setSearchStr] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams({\n    searchStr: '',\n  });\n  const searchQuery = searchParams.get('searchStr');\n  const [searchMovies, { isLoading, error }] = useHttpRequest(\n    fetchMoviesByQuery,\n    searchQuery\n  );\n\n  const [searchPerformed, setSearchPerformed] = useState(false);\n\n  const handleInputChange = e => {\n    setSearchStr(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ searchStr });\n    setSearchStr('');\n    setSearchPerformed(true);\n  };\n\n    // console.log('searchMovies', searchMovies);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleFormSubmit}>\n        <input type=\"text\" value={searchStr} onChange={handleInputChange} />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {isLoading && <h2>Loading...</h2>}\n      {error && <p>Error: {error}</p>}\n\n      {searchPerformed &&\n       !isLoading && \n       searchMovies && \n       searchMovies.length === 0 ? (\n        <h1>No movies found</h1>\n      ) : (\n        searchMovies && <MovieList movies={searchMovies} />\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '9ce8efc3ff8d8ed00ad4e59e8fd58805';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: { ...params },\n  });\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  // console.log(data.results);\n  return data.results;\n};\n"],"names":["_ref","movies","location","useLocation","_jsx","children","map","movie","Link","to","concat","id","state","from","title","useHttpRequest","fn","param","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setLoading","useEffect","then","catch","message","searchStr","setSearchStr","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchQuery","get","_useHttpRequest","fetchMoviesByQuery","_useHttpRequest2","searchMovies","_useHttpRequest2$","searchPerformed","setSearchPerformed","_jsxs","className","onSubmit","e","preventDefault","type","value","onChange","target","length","MovieList","axios","basePosterUrl","api_key","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","_context","prev","next","_objectSpread","sent","abrupt","results","stop","_x","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x2","fetchCast","_ref3","_callee3","_yield$axios$get3","_context3","cast","_x3","fetchReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x4","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}