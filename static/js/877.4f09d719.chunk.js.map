{"version":3,"file":"static/js/877.4f09d719.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","hooks/useHttpRequest.js","services/api.js"],"sourcesContent":["import { useHttpRequest } from 'hooks/useHttpRequest';\nimport { useParams } from 'react-router-dom';\nimport { basePosterUrl, fetchCast } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, { isLoading, error }] = useHttpRequest(fetchCast, movieId);\n\n  // console.log(cast);\n  if (isLoading) {\n    return <h2>Loading cast...</h2>;\n  }\n\n  if (error) {\n    return <p>Error: {error}</p>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {cast &&\n          cast.map(item => (\n            <li key={item.id}>\n              <img\n                src={`${basePosterUrl}${item.profile_path}`}\n                alt={item.name}\n              />\n              <p>{item.name}</p>\n\n              <p>Character: {item.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\n\nexport const useHttpRequest = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fn(param)\n      .then(data => {\n        setData(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, [fn, param]);\n\n  return [data, setData, { error, isLoading }];\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '9ce8efc3ff8d8ed00ad4e59e8fd58805';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: { ...params },\n  });\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  // console.log(data.results);\n  return data.results;\n};\n"],"names":["movieId","useParams","_useHttpRequest","useHttpRequest","fetchCast","_useHttpRequest2","_slicedToArray","cast","_useHttpRequest2$","isLoading","error","_jsx","children","_jsxs","map","item","src","concat","basePosterUrl","profile_path","alt","name","character","id","fn","param","_useState","useState","_useState2","data","setData","_useState3","_useState4","setError","_useState5","_useState6","setLoading","useEffect","then","catch","message","axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","_context","prev","next","_objectSpread","sent","abrupt","results","stop","_x","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x2","_ref3","_callee3","_yield$axios$get3","_context3","_x3","fetchReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchMoviesByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}