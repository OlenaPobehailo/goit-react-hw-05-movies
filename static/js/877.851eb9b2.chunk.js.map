{"version":3,"file":"static/js/877.851eb9b2.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","hooks/useHttpRequest.js","services/api.js"],"sourcesContent":["import { useHttpRequest } from 'hooks/useHttpRequest';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { basePosterUrl, fetchCast } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast] = useHttpRequest(fetchCast, movieId);\n\n  // console.log(cast);\n\n  return (\n    <div>\n      Cast\n      <ul>\n        {cast &&\n          cast.map(item => (\n            <li key={item.id}>\n              <img\n                src={`${basePosterUrl}${item.profile_path}`}\n                alt={item.name}\n              />\n              <p>{item.name}</p>\n\n              <p>Character: {item.character}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { useEffect, useState } from 'react';\n\nexport const useHttpRequest = (fn, param) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fn(param)\n      .then(data => {\n        setData(data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error.message);\n        setLoading(false);\n      });\n  }, [fn, param]);\n\n  return [data, setData, { error, isLoading }];\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const basePosterUrl = 'https://image.tmdb.org/t/p/w500';\n\nconst API_KEY = '9ce8efc3ff8d8ed00ad4e59e8fd58805';\naxios.defaults.params = { api_key: API_KEY };\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get(`/trending/movie/day`, {\n    params: { ...params },\n  });\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  // console.log(data.results);\n  return data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}`);\n  // console.log(data.results);\n  return data.results;\n};\n"],"names":["movieId","useParams","_useHttpRequest","useHttpRequest","fetchCast","cast","_slicedToArray","_jsxs","children","_jsx","map","item","src","concat","basePosterUrl","profile_path","alt","name","character","id","fn","param","_useState","useState","_useState2","data","setData","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setLoading","useEffect","then","catch","message","axios","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","params","_yield$axios$get","_context","prev","next","_objectSpread","sent","abrupt","results","stop","_x","apply","arguments","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x2","_ref3","_callee3","_yield$axios$get3","_context3","_x3","fetchReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchMoviesByQuery","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5"],"sourceRoot":""}